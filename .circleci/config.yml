version: 2
jobs:
  build:
    working_directory: ~/repo
    environment:
      NOKOGIRI_USE_SYSTEM_LIBRARIES: true
    docker:
      - image: circleci/ruby:2.3.7
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dep-{{ .Branch }}-
            - v2-dep-master-
            - v2-dep-
      - run: echo -e "export RAILS_ENV=test\nexport RACK_ENV=test" >> $BASH_ENV
      - run:
          name: Configure Bundler
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            sudo gem install bundler
      - run:
          "bundle check --path=vendor/bundle || bundle install --path=vendor/bundle
          --jobs=4 --retry=3 "
      - run: LC_ALL=en_US.UTF-8 bundle exec jekyll build
      - save_cache:
          key: v2-dep-{{ .Branch }}-{{ epoch }}
          paths:
            - vendor/bundle
            - ~/virtualenvs
            - ~/.m2
            - ~/.ivy2
            - ~/.bundle
            - ~/.go_workspace
            - ~/.gradle
            - ~/.cache/bower
      - run: bundle exec htmlproofer ./_site --allow-hash-href --check-favicon --check-html --disable-external --empty-alt-ignore
  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get -y -qq install awscli
      - run:
          name: Invalidate CloudFront distro for brand.ragtag.org
          command: |
            aws cloudfront create-invalidation --distribution-id E1JSJN131ANO47 --paths '/*'
      - run:
          name: Copy assets folder to assets.ragtag.tech
          command: |
            aws s3 sync ./assets/ s3://assets.ragtag.tech/ --acl public-read
      - run:
          name: Invalidate CloudFront distribution for assets.ragtag.tech
          command: |
            aws cloudfront create-invalidation --distribution-id E1N1GBDQRP84YH --paths '/*'

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
